@model List<EducationManagementStudio.Models.CustomContentModels.CustomContent>

@using EducationManagementStudio.Models.CustomContentModels
@using EducationManagementStudio.Models.AccountModels

@inject UserManager<ApplicationUser> UserManager

@{
    var currentUser = await UserManager.GetUserAsync(User);
}

@foreach (var content in Model)
{
    if (content is CustomContentText)
    {
        var textContent = (CustomContentText)content;

        <div data-markdown="content-trim">
            @Html.Raw(textContent.Content)
        </div>
    }

    if (content is CustomContentAlert)
    {
        var alertContent = (CustomContentAlert)content;
        string alertTypeValue = String.Empty;
        var alertTypeName = Enum.GetName(typeof(CustomContentAlertType), alertContent.AlertType);
        alertTypeValue = "alert-" + alertTypeName.ToLower();

        <div class="alert alert-dismissible @alertTypeValue">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <div data-markdown="line">@alertContent.Content</div>
        </div>
    }

    if (content is CustomContentPanel)
    {
        var panelContent = (CustomContentPanel)content;

        <div class="panel panel-@panelContent.PanelType.ToString().ToLower()">
            <div class="panel-heading">
                <h3 class="panel-title" data-markdown="line">@panelContent.Heading</h3>
            </div>
            <div class="panel-body" data-markdown="line">@panelContent.Content</div>
        </div>
    }

    if (content is CustomContentTextArea)
    {
        var textAreaContent = (CustomContentTextArea)content;

        <textarea class="form-control" rows="@textAreaContent.RowsCount" placeholder="@textAreaContent.Placeholder" data-inputcomponentid="@textAreaContent.Id">@textAreaContent.CustomContentResponses.SingleOrDefault(ccr => ccr.Student.Id == currentUser.Id)?.Value</textarea>
    }
}

<script>
    var inputComponents = document.querySelectorAll('[data-inputcomponentid]');
    for(var i = 0; i<inputComponents.length; i++)
    {
        var currentComponent = inputComponents[i];

        currentComponent.oninput = function (event) {
            var currentComponentId = event.srcElement.attributes['data-inputcomponentid'].value;
            var currentComponentValue = event.srcElement.value;

            var data = { 
                ComponentId: currentComponentId,
                Value: currentComponentValue,
                DateSent: new Date()
            }

            var XHR = new XMLHttpRequest();
            XHR.open('POST', '/api/CustomContentResponse');
            XHR.setRequestHeader('Content-Type', 'application/json');
            XHR.send(JSON.stringify(data));
        }
    }
</script>